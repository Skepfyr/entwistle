_File:
  (Rule | Test | __)*

Rule:
  NonTerminal ':' _ Production nl
  NonTerminal ':' nl Productions

Productions:
  (' '+ Production nl)+

Production:
  Sequence (_ '|' _ Sequence)*

Sequence:
  Item (_ Item)*

Item:
  ('(' _ Production _ ')' | NonTerminal | _QuotedLiteral | '/' Regex '/') Quantifier?

Quantifier:
  '*'
  '+'
  '?'
  '{' _ Number _ '}'
  '{' _ ',' _ Number _ '}'
  '{' _ Number _ ',' _ '}'
  '{' _ Number _ ',' _ Number _ '}'

Number: /[0_9]+/

Test:
  '#'+>Hashes _ NonTerminal nl TestInput[Hashes] nl Hashes nl ParseTree[''] nl Hashes nl

TestInput[Hashes]: (!(nl Hashes) /./)*

ParseTree[Indent]:
  Indent Literal nl
  Indent NonTerminal ':' nl (ParseTree['  ' Indent])+

NonTerminal: Identifier ('[' _ Identifier (_ ',' _ Identifier)* _ ']')?
Identifier: /[a_zA_Z0_9\__]+/
-QuotedLiteral: '\'' Literal '\''
Literal: Char*
Char:
  /[^'\\]/
  '\\\\'
  '\\\''
Regex: RegexChar+
RegexChar:
  /[^/\\]/
  '\\\\'
  '\\/'


@nl: '\n' | '\r\n'
-@_: /[ ]*/
-@__: /\s*/
